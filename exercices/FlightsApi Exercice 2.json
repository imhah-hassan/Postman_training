{
	"info": {
		"_postman_id": "db7b9bf1-5bbb-45c9-9447-8364b85c820f",
		"name": "FlightsApi Exercice 2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5167767"
	},
	"item": [
		{
			"name": "SearchFlights",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Le code retour est 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"FlightNumber et SeatsAvailable sont présents dans la réponse\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"FlightNumber\");\r",
							"    pm.expect(pm.response.text()).to.include(\"SeatsAvailable\");\r",
							"});\r",
							"\r",
							"pm.test(\"Le 1er vol disponible est le 10519\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].FlightNumber).to.eql(10519);\r",
							"});\r",
							"\r",
							"pm.test(\"6 vols disponibles à cette date\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eql(2);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/Flights?DepartureCity=Paris&ArrivalCity=London&Date=2023-11-16",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"Flights"
					],
					"query": [
						{
							"key": "DepartureCity",
							"value": "Paris"
						},
						{
							"key": "ArrivalCity",
							"value": "London"
						},
						{
							"key": "Date",
							"value": "2023-11-16"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetFlight",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Le code retour est 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"FlightNumber et SeatsAvailable sont présents dans la réponse\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"FlightNumber\");\r",
							"    pm.expect(pm.response.text()).to.include(\"SeatsAvailable\");\r",
							"});\r",
							"\r",
							"pm.test(\"Le nombre de sièges disponibles est supérieur à 2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.SeatsAvailable).greaterThan(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/Flights/10519",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"Flights",
						"10519"
					]
				}
			},
			"response": []
		},
		{
			"name": "BookFlight",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Le code retour est 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"OrderNumber et TotalPrice sont présents dans la réponse\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"OrderNumber\");\r",
							"    pm.expect(pm.response.text()).to.include(\"TotalPrice\");\r",
							"});\r",
							"\r",
							"pm.test(\"Le numéro de résa est supérieur à 81\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.OrderNumber).greaterThan(81);\r",
							"});\r",
							"\r",
							"pm.test(\"Temps de réponse inférieur à 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{  \"DepartureDate\": \"2023-11-16\",  \"FlightNumber\": 10519,  \"CustomerName\": \"IMHAH Hassan\",   \"NumberOfTickets\": 1,  \"Class\": \"First\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/FlightOrders",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"FlightOrders"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetOrder",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/FlightOrders/90",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"FlightOrders",
						"90"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Le code retour est 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"OrderNumber et TotalPrice sont présents dans la réponse\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"OrderNumber\");\r",
							"    pm.expect(pm.response.text()).to.include(\"TotalPrice\");\r",
							"});\r",
							"\r",
							"pm.test(\"Le prix total est supérieur à 500\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.TotalPrice).greaterThan(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{  \"DepartureDate\": \"2023-11-16\",  \"FlightNumber\": 10519,  \"CustomerName\": \"IMHAH Hassan\",   \"NumberOfTickets\": 4,  \"Class\": \"First\"}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/FlightOrders/82",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"FlightOrders",
						"82"
					]
				}
			},
			"response": []
		},
		{
			"name": "CancelOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Le code retour est 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"L'annulation de la réservation est OK\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"true\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/FlightOrders/107",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"FlightOrders",
						"107"
					]
				}
			},
			"response": []
		}
	]
}